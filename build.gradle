buildscript {
	repositories {
		gradlePluginPortal()
	}
	dependencies {
		classpath 'com.modrinth.minotaur:Minotaur:2.4.3'
		classpath "com.github.breadmoirai:github-release:2.4.1"
	}
}

plugins {
	id 'maven-publish'
	alias libs.plugins.loom
}

if (System.getenv("MODRINTH_TOKEN")) {
	apply plugin: "com.modrinth.minotaur"
}
if (System.getenv("GITHUB_TOKEN")) {
	apply plugin: "com.github.breadmoirai.github-release"
}

archivesBaseName = project.archives_base_name

def mc_major = '1.19'
def nbt_crafting = '2'
def mc = mc_major + '.2'
def default_branch = 'nbtc2'

def origVersion = project.version
project.version = project.version + "+nbtc" + nbt_crafting
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	// Here go other maven servers
	maven {
		name "Siphalor's Maven"
		url "https://maven.siphalor.de"
	}

	maven { // Cloth Config
		url "https://maven.shedaniel.me/"
	}
	maven { // ModMenu
		url "https://maven.terraformersmc.com/"
	}
	// For some testing dependencies of Nbt Crafting
	maven {
		name "Jitpack"
		url "https://jitpack.io"
	}
	maven {
		url "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	// Compat
	maven {
		url 'https://repo.sleeping.town'
	}
	repositories {
		maven { url 'https://maven.blamejared.com' }
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		url 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		url 'https://maven.cafeteria.dev'
		content {
			includeGroup 'net.adriantodt.fabricmc'
		}
	}
	// Create
	maven { url = "https://dvs1.progwml6.com/files/maven/" } // JEI
	maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
	maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Porting Lib, Forge Tags, Milk Lib, Registrate
	maven { url = "https://cursemaven.com" } // Forge Config API Port
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	maven { url = "https://maven.tterrag.com/" } // Flywheel
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	// // Base // //
	minecraft libs.minecraft
	mappings variantOf(libs.qm) { classifier "intermediary-v2" }
	modImplementation libs.ql
	modImplementation libs.qsl
	modImplementation libs.qfapi

	// // Libraries // //
	modImplementation libs.nbtCrafting

	// // Compat Dependencies // //
	modImplementation libs.lib39aqi
	modImplementation libs.lib39core
	modImplementation libs.lib39crowbar
	modImplementation libs.lib39deferral
	modImplementation libs.lib39dessicant
	modImplementation libs.lib39fractal
	modImplementation libs.lib39gesundheit
	modImplementation libs.lib39keygen
	modImplementation libs.lib39lockpick
	modImplementation libs.lib39machination
	modImplementation libs.lib39mesh
	modImplementation libs.lib39phantom
	modImplementation libs.lib39recoil
	modImplementation libs.lib39ripple
	modImplementation libs.lib39sandman
	modImplementation libs.lib39tunnel
	modImplementation libs.lib39util
	modImplementation libs.lib39waypoint
	modImplementation libs.lib39weld

	modApi libs.forgeConfigApiPort

	// // Compat // //
	modImplementation libs.farmersDelight
	modImplementation libs.campanion
	modImplementation libs.halfdoors
	modImplementation libs.chalk
	modImplementation libs.consistencyPlus
	modImplementation libs.yttr
	modImplementation libs.botania
	modImplementation libs.create
}


processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

jar {
	from("LICENSE.txt") {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}

if (System.getenv("MODRINTH_TOKEN")) {
	modrinth {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = 'tinkerers-smithing'
		versionNumber = project.version
		versionName = origVersion
		versionType = 'release'
		uploadFile = remapJar
		gameVersions = ['1.15', '1.15.1', '1.15.2', '1.16', '1.16.1', '1.16.2', '1.16.3', '1.16.4', '1.16.5', '1.17', '1.17.1', '1.18', '1.18.1', '1.18.2', '1.19', '1.19.1', '1.19.2']
		loaders = ['quilt', 'fabric']
		detectLoaders = false
		dependencies {
			required.project "nbt-crafting"
		}
		changelog = "Changelog: https://github.com/sisby-folk/tinkerers-smithing/releases/tag/v" + origVersion
		syncBodyFrom = rootProject.file("README.md").text
	}
}

if (System.getenv("GITHUB_TOKEN")) {
	githubRelease {
		token System.getenv("GITHUB_TOKEN")
		owner "sisby-folk"
		repo "tinkerers-smithing"
		tagName 'v' + origVersion
		releaseName origVersion
		targetCommitish default_branch
		draft false
		prerelease false
		releaseAssets remapJar.archiveFile
		allowUploadToExisting true
		generateReleaseNotes true
	}
	tasks.githubRelease.dependsOn remapJar
}
